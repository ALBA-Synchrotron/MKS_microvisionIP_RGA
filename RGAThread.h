//=============================================================================
//
// file :        RGAThread.h
//
// description : Thread include code for MKS_MicrovisionIP_RGA device server
//
// project :	MKS Microvision IP RGA
//
// $Author: bourtemb $
//
// $Revision: 1.5 $
//
// $Log: not supported by cvs2svn $
// Revision 1.4  2006/08/22 08:35:43  bourtemb
// min_detectable_pressure is now a device property
//
// Revision 1.3  2006/05/23 15:18:58  bourtemb
// add data members for the fire events and the fill attr buffer
// remove unused data members rgads and rgadsOK
//
// Revision 1.2  2005/11/29 12:28:29  bourtemb
// Create the attributes Mass# dynamically with their default properties.
//
// Revision 1.1.1.1  2005/11/28 12:15:08  bourtemb
// Imported using TkCVS
//
//
// copyleft :    European Synchrotron Radiation Facility
//               BP 220, Grenoble 38043
//               FRANCE
//
//=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================
#ifndef _RGATHREAD_H
#define _RGATHREAD_H

#include <tango.h>
#include <MKS_MicrovisionIP_RGA.h>

namespace MKS_MicrovisionIP_RGA_ns
{
	class RGAThread : public omni_thread, public Tango::LogAdapter
		{
		public :
			RGAThread (MKS_MicrovisionIP_RGA *obj, omni_mutex &m);

		private :
			MKS_MicrovisionIP_RGA 	* rga_obj;
			omni_mutex 		&mutex;
			bool 			isconnected;
			Tango::DevDouble	min_detectable_pressure;
			unsigned int		mode; // BARCHART, LEAKCHECK, ANALOG
			
			Tango::MultiAttribute 	* attr_list;
			Tango::DeviceProxy 	* socketds;
			Tango::Util 		* tg;
			bool socketdsOK;
			void clean_exit();
			void *run_undetached(void *arg);
			bool parse_answer(const string &);
			double get_ticks();
};



}	//	namespace RGA_IP_ns

#endif // _RGATHREAD_H
